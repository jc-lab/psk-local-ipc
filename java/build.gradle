buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
}

plugins {
    id "java-library"
    id "maven-publish"
    id "signing"
}

allprojects {
    group "kr.jclab.javautils"
    version "${gradle.ext.projectVersion}"
}

repositories {
    mavenCentral()
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    withJavadocJar()
    withSourcesJar()
}

dependencies {
    compileOnly("org.projectlombok:lombok:1.18.24")
    annotationProcessor("org.projectlombok:lombok:1.18.24")
    testCompileOnly("org.projectlombok:lombok:1.18.24")
    testAnnotationProcessor("org.projectlombok:lombok:1.18.24")
    
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.7.0")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.7.0")

    implementation("net.java.dev.jna:jna:5.12.0")
    implementation("net.java.dev.jna:jna-platform:5.12.0")

    api("org.bouncycastle:bcprov-jdk15on:1.70")
    api("org.bouncycastle:bctls-jdk15on:1.70")
}

test {
    useJUnitPlatform()
}

artifacts {
    archives sourcesJar, javadocJar
}

tasks.withType(Sign) {
    onlyIf { gradle.ext.isReleaseVersion && (project.hasProperty('signing.gnupg.keyName') || project.hasProperty('signing.keyId')) }
}

publishing {
    repositories {
        maven {
            def releasesRepoUrl = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
            def snapshotsRepoUrl = 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username = findProperty('ossrhUsername')
                password = findProperty('ossrhPassword')
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            groupId = group
            artifactId = 'psk-local-ipc'
            from components.java
            pom {
                name = 'psk-local-ipc'
                description = 'A concise description of my library'
                url = 'https://github.com/jc-lab/psk-local-ipc'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'jclab-joseph'
                        name = 'Joseph Lee'
                        email = 'joseph@jc-lab.net'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/jc-lab/psk-local-ipc.git'
                    developerConnection =  'scm:git:ssh://git@github.com/jc-lab/psk-local-ipc.git'
                    url = 'https://github.com/jc-lab/psk-local-ipc'
                }
            }
        }
    }
}

signing {
    useGpgCmd()
    sign publishing.publications.mavenJava
}
